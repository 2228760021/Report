#阅读程序

#实验目的
掌握Java中抽象类和抽象方法的定义； 
掌握Java中接口的定义，熟练掌握接口的定义形式以及接口的实现方法
了解异常的使用方法，并在程序中根据输入情况做异常处理

#实验内容
某学校为了给学生提供勤工俭学机会，也减轻授课教师的部分压力，准许博士研究生参与课程的助教工作。此时，该博士研究生有双重身份：学生和助教教师,
1.设计两个管理接口：学生管理接口和教师管理接口。学生接口必须包括缴纳学费、查学费的方法；教师接口包括发放薪水和查询薪水的方法。
2.设计博士研究生类，实现上述的两个接口，该博士研究生应具有姓名、性别、年龄、每学期学费、每月薪水等属性。
3.编写测试类，并实例化至少两名博士研究生，统计他们的年收入和学费。根据两者之差，算出每名博士研究生的年应纳税金额。


#实验要求
1.在博士研究生类中实现各个接口定义的抽象方法;
2.对年学费和年收入进行统计，用收入减去学费，求得纳税额；
3.国家最新纳税标准（系数），属于某一时期的特定固定值，与实例化对象没有关系，考虑如何用static  final修饰定义。
4.实例化研究生类时，可采用运行时通过main方法的参数args一次性赋值，也可采用Scanner类实现运行时交互式输入。
5.根据输入情况，要在程序中做异常处理。

#实验结果
package zyc;

public interface TeacherInterface {
 
 //教师工资
 public abstract void setPay(double pay);
 
 public abstract void getPay(double pay);
}



package zyc;

ic interface StudentInterface {
 
 // 学生学费
 public abstract void setFee(double fee);
 
 public abstract void getFee(double fee);
}



package zyc;

import java.util.Scanner;
 

public class Graduate implements StudentInterface,TeacherInterface{
 // 变量
 String name;
 String sex;
 int age;
 double fee;
 double pay;
 
 // 实现接口中的抽象方法
 @Override
 public void setPay(double pay) {
  this.pay = pay * 12;
  System.out.println("你的年收入为：" + this.pay);
 }

 @Override
 public void getPay(double pay) {
  this.pay = pay * 12;
  System.out.println("你的月收入为：" + this.pay);
 }
 
 
 @Override
 public void setFee(double fee) {
  this.fee = fee;
  System.out.println("你的学费设置为：" + this.fee);
 }
 

 @Override
 public void getFee(double fee) {
  this.fee = fee;
  System.out.println("你的学费为：" + this.fee);
 }
 public boolean Loan(){
  if ((this.pay - this.fee) <42000) {
   System.out.println("你的年收入" + this.pay + ",减去学费" + this.fee + "等于" + (this.pay - this.fee));
   return true;
  }
  System.out.println("你的年收入" + this.pay + ",减去学费" + this.fee +",减去"+ 42000 + ",乘" + 0.03 + "等于" + (this.pay - this.fee - 3500)*0.03);
  return false;
 }
 public static void main(String[] args) {
  // 创建一个研究生对象
  Graduate graduate = new Graduate();
  // 研究生对象的初始化
  graduate.name = "张一川";
  System.out.println("你好:" + graduate.name);
  try (// 设置月工资
  Scanner input = new Scanner(System.in)) {
   System.out.println("请输入你的月工资：");
   double pay = input.nextDouble();
   graduate.setPay(pay);
   
   // 设置学费
   System.out.println("请输入你的学费：");
   double fee = input.nextDouble();
   graduate.setFee(fee);
      input.close();
  }
  // 判断是否缴纳税款
  boolean flag = graduate.Loan();
  if (flag) {
   System.out.println("(无需纳税)");
  }else {
   System.out.println("你需要纳税");
  }
 }
 
}
